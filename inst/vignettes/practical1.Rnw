%\VignetteIndexEntry{practical1}
%\VignetteEngine{Sweave}

<<echo=FALSE>>=
results='hide';echo=FALSE
@

\documentclass[a4paper,justified,openany]{tufte-handout}
<<setup, echo=FALSE, cache=FALSE>>=
library(knitr)
opts_knit$set(self.contained=FALSE, tidy = TRUE, 
              cache = TRUE, size = "small", message = FALSE,
              fig.path='knitr_figure/graphics-', 
               cache.path='knitr_cache/graphics-', 
               fig.align='center', 
               dev='pdf', fig.width=5, fig.height=5)

knit_hooks$set(par=function(before, options, envir){
    if (before && options$fig.show!='none') {
        par(mar=c(3,3,2,1),cex.lab=.95,cex.axis=.9,
            mgp=c(2,.7,0),tcl=-.01, las=1)
}}, crop=hook_pdfcrop)


opts_knit$set(out.format = "latex")
options(width=56)
dir.create("graphics",showWarnings = FALSE)
@
\usepackage{amsmath, booktabs}
% Set up the images/graphics package
\usepackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
%\graphicspath{{vignettes/graphics/}}
\title{Predictive Analytics: practical 1\Sexpr{ifelse(echo, "solutions", "")}}
\date{} % if the \date{} command is left out, the current date will be used
% The following package makes prettier tables. We're all about the bling!
\usepackage{booktabs}
% The units package provides nice, non-stacked fractions and better spacing
% for units.
\usepackage{units}
% The fancyvrb package lets us customize the formatting of verbatim
% environments. We use a slightly smaller font.
\usepackage{fancyvrb}
\fvset{fontsize=\normalsize}
\newcommand{\cc}{\texttt}
\graphicspath{{../graphics/}}
\setcounter{secnumdepth}{2}
\usepackage{microtype}
\begin{document}


\maketitle% this prints the handout title, author, and date

\section*{Course R package}

Installing the course R package\sidenote{A package is an \textit{add-on} or a \textit{module}. It provides additional functions and data.}
is straightforward. First install \cc{drat}
<<eval=FALSE, tidy=FALSE>>=
install.packages("drat")
@
\noindent Then
<<eval=FALSE, tidy=FALSE>>=
drat::addRepo("rcourses")
install.packages("nclRpredictive", type="source")
@
\noindent This R package contains copies of the practicals, solutions and data sets that we require. It will also
automatically install any packages that we use during the course. To load the package, use
<<>>=
library("nclRpredictive")
@
\noindent During this practical we will the \cc{caret} package
<<eval = TRUE, message=FALSE>>=
library("caret")
@

\section*{The cars2010 data set}

The \cc{cars2010} data set contains information about car models in $2010$. The aim is to model the \cc{FE} variable which is a fuel economy measure based on $13$ predictors.\sidenote{Further information can be found in the help page, \cc{help(cars2010)}.}

The data is part of the \cc{AppliedPredictiveModeling} package and can be loaded by,
<<>>=
data(FuelEconomy, package = "AppliedPredictiveModeling")
@



\section*{Exploring the data}

\noindent There are a lot of questions to be considered below marked out by bullet points in the document. Don't worry if you can't finish them all, I intended for there to be enough such that if anyone wants to continue trying things at home they can.

\begin{itemize}
  \item Prior to any analysis we should get an idea of the relationships between variables in the data.\marginnote{The \cc{FE $\sim$ .} notation is shorthand for \cc{FE} against all variables in the data frame specified by the \cc{data} argument.} Use the \cc{pairs} function to explore the data. The first few are shown in figure~\ref{fig:fig1_1}.

An alternative to using \cc{pairs} is to specify a plot device that has enough
space for the number of plots required to plot the response against
each predictor. We don't get all the pairwise information amongst predictors but it saves a lot of space on the plot and makes it easier to see what's going on. Its also a good idea to make smaller margins. 
<<eval = FALSE>>=
op = par(mfrow = c(3, 5), mar = c(4, 2, 1, 1.5))
plot(FE ~ ., data = cars2010)
par(op)
@

\end{itemize}

\begin{figure}[t]
<<echo=FALSE, fig.width=9, fig.height=4.5>>=
setnicepar(mfrow = c(1,2))
mypalette(1)
plot(FE ~ EngDispl + NumCyl, data = cars2010, pch=21, bg=1, 
     ylim=c(0, 75), cex=0.7)
@  
  \caption{Plotting the response against some of the predictor variables in the \cc{cars2010} data set.}
  \label{fig:fig1_1}
\end{figure}


\begin{itemize}
  \item Create a simple linear model fit of \cc{FE} against \cc{EngDispl} using the \cc{train} function.\sidenote{Remember, to specify a particular model type we use the \cc{method} argument.}

<<echo = echo>>=
m1 = train(FE ~ EngDispl, method = "lm", data = cars2010)
@


\item Examine the residuals of this fitted model, plotting residuals against fitted values
<<echo=echo, fig.keep="none">>=
rstd = rstandard(m1$finalModel)
plot(fitted.values(m1$finalModel), rstd)
@

\noindent We can add the lines showing where we expect the residuals to fall to aid graphical inspection
<<eval = FALSE, tidy=TRUE>>=
abline(h = c(-2,0,2), col = c(2,3,2), lty = c(2,1,2))
@

\item What do the residuals tell us about the model fit using this plot? 
<<echo=echo, tidy=TRUE>>=
# There definitely appears to be some trend in the residuals. 
#The curved shape indicates that we potentially require some transformation of variables. 
#A square term might help.  
@

\item Plot the fitted values vs the observed values
<<echo=echo, fig.keep="none">>=
plot(cars2010$FE, fitted.values(m1$finalModel))
abline(0,1)
@
\begin{itemize}
  \item What does this plot tell us about the predictive performance of this model across the range of the response?
<<echo=echo, tidy=TRUE>>=  
#We seem to slightly over estimate more often than not in the 25-35 range. 
#For the upper end of the range we seem to always under estimate the true values.  
@
  \item Produce other diagnostic plots of this fitted model
<<echo=echo,fig.keep="none">>=
qqnorm(rstd); qqline(rstd)
plot(cars2010$EngDispl, rstd)
abline(h = c(-2,0,2), col=  2:3, lty= 1:2)
@
  \item Are the modelling assumptions justified?
<<echo=echo, tidy=TRUE>>=  
## We are struggling to justify the assumption of normality in the residuals here, all of the diagnostics indicate patterns remain in the residuals that are currently unexplained by the model.
@
\end{itemize}
\end{itemize}


\section*{Extending the model}


\begin{itemize}
  \item Do you think adding a quadratic term will improve the model fit?
<<echo=echo, tidy=TRUE>>=
# We are struggling to justify the assumption of normality in the residuals here, 
# all of the diagnostics indicate patterns remain in the residuals that are currently unexplained by the model
@

  \item Fit a model with the linear and quadratic terms for \cc{EngDispl} and call it \cc{m2}

<<echo = echo>>=
m2 = train(FE ~ poly(EngDispl,2,raw = TRUE), data = cars2010, 
    method = "lm")
@

\begin{itemize}
  \item Assess the modelling assumptions for this new model
  \item How do the two models compare?
<<echo=echo, tidy=TRUE>>=
# The residual diagnostics indicate a better fit now that the quadratic term has been included.
@
\end{itemize}
  \item How does transforming the response variable affect the fit?\marginnote{Common transformations may be a log or square root function.}
<<echo=echo, tidy=TRUE>>=
#Perhaps the residuals more closely match the assumption of normality under this transformation. However we need to be careful about interpretation now as the response is on the log scale. Likewise for prediction we need to remember to undo the transformation.
@
  \item Add \cc{NumCyl} as a predictor to the simple linear regression model \cc{m1} and call it \cc{m5}
<<echo=echo, tidy=TRUE>>=
m5 = train(FE~EngDispl + NumCyl, data = cars2010, method = "lm")
@
  \item Examine model fit and compare to the original. 
  \item Does the model improve with the addition of an extra variable?
\end{itemize}

% Add \cc{NumCyl} as a predictor to the simple linear regression model \cc{m1} and call it \cc{m5}. Examine model fit and compare to the original. Does the model improve with the addition of an extra variable?


\section*{Visualising the model}

The \cc{nclRpredictive} package contains a \cc{plot3d} function to help with viewing these surfaces in 3D as in figure~\ref{fig:fesurface}.\sidenote{We can also add the observed points to the plot using the \cc{points} argument to this function, see the help page for further information.}
<<eval = FALSE>>=
plot3d(m5,cars2010$EngDispl, cars2010$NumCyl, cars2010$FE)
@
<<echo = FALSE>>=
pdf("graphics/fesurface.pdf", width = 4, height = 4)
plot3d(m5,cars2010$EngDispl, cars2010$NumCyl, cars2010$FE)
sink = dev.off()
system("pdfcrop graphics/fesurface.pdf")
@
\begin{marginfigure}
  \includegraphics[]{graphics/fesurface-crop}
  \caption{A surface plot from a linear model of fuel economy against the number of cylinders and engine displacement including the interaction term.}
  \label{fig:fesurface}
\end{marginfigure}


\begin{itemize}
  \item Try fitting other variations of this model using these two predictors, how is prediction affected in each case? Don't forget to examine residuals, R squared values and the predictive surface.
  \item If you want to add an interaction term you can do so with the \cc{:} operator, how does the interaction affect the surface?
\end{itemize}

% Try fitting other variations of this model using these two predictors, how is prediction affected in each case? Don't forget to examine residuals, R squared values and the predictive surface. If you want to add an interaction term you can do so with the \cc{:} operator, how does the interaction affect the surface?

\noindent One way to guage how well your model is performing is to hold out a set of observations from the training data. Then examine how well your model extends to the data that wasn't used for training. We will see more of this in coming chapters of the notes.
<<>>=
# set up a set of indicies that will be included 
# in the training data
trainIndex = sample(nrow(cars2010), 900)
# create two data frames, a training and a test set
# by taking subsets using this set of indicies
# here we use 900 observations to train the model
# and the rest for testing
carstrain = cars2010[trainIndex,]
carstest = cars2010[-trainIndex,]
# train the model and predict
mtrain = train(FE~EngDispl + NumCyl, data = carstrain, 
               method = "lm")
prediction = predict(mtrain, carstest)

# residuals of the test set
res = prediction - carstest$FE
# calculate RMSE
sqrt(mean(res*res))
@

\noindent Having a small value here indicates that my model does a good job of predicting for observations that weren't used to train the model.

\section*{In the spirit of competition \ldots}

Try to fit the best model that you can using the \cc{cars2010} data set and the above tools. 
I have a set of data that you haven't yet seen. Once you are happy with your model you can validate it using the \cc{validate} function in the \cc{nclRpredictive} package.

<<eval = FALSE>>=
m1validated = validate(model = m1)
@

\section*{Other data sets}

A couple of other data sets that can be used to try fitting linear regression models.
\begin{table}[!h]
  \centering
  \begin{tabular}{@{} lll @{}}
  \toprule
  data set & Package & Response \\
  \midrule
  diamonds & ggplot2 & price \\
  Wage & ISLR & wage \\
  BostonHousing & mlbench & medv \\
  \bottomrule
\end{tabular}
\end{table}

\end{document}



%' \noindent We could create a 3D plot to investigate what the fitted model looks like against both independent variables simultaneously.
%' <<echo = FALSE>>=
%' m5 = train(FE~EngDispl + NumCyl + EngDispl:NumCyl, data = cars2010, method = "lm")
%' @
%' 
%' <<eval = FALSE>>=
%' newdata = expand.grid(
%'   EngDispl = seq(
%'       min(cars2010$EngDispl), 
%'       max(cars2010$EngDispl),
%'       length.out = 100),
%'   NumCyl = seq(
%'       min(cars2010$NumCyl), 
%'       max(cars2010$NumCyl),
%'       length.out = 100))
%' preddata = predict(m5, newdata)
%' persp( unique(newdata$EngDispl), 
%'       unique(newdata$NumCyl), 
%'       matrix(preddata,nrow = 100), 
%'       phi = 30, theta = 30)
%' @
%' \noindent The \cc{phi} and \cc{theta} arguments specify the rotation of the plot in degrees. You can play around with these values until the plot is clear, I find a value of $30$ for each often works well. It should be clear to see that as both engine displacement and number of cylinders increase the fitted surface predicts a lower fuel economy.
