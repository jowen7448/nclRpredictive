%\VignetteIndexEntry{solutions2}
%\VignetteEngine{Sweave}


\documentclass[a4paper,justified,openany]{tufte-handout}\usepackage{knitr}

\usepackage{amsmath}
\usepackage{graphicx}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
\graphicspath{{graphics/}}
\title{Predictive Analytics: practical 2 solutions}
\date{} % if the \date{} command is left out, the current date will be used

\usepackage{booktabs}
\usepackage{units}
\usepackage{fancyvrb}
\fvset{fontsize=\normalsize}
\newcommand{\cc}{\texttt}
\graphicspath{{../graphics/}}
\setcounter{secnumdepth}{2}
\usepackage{microtype}
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\begin{document}
\maketitle% this prints the handout title, author, and date

\section*{The \cc{OJ} data set}

The \cc{OJ} data set from the \cc{ISLR} package contains information on which of two brands of orange juice customers purchased\sidenote{The response variable is \cc{Purchase}.} and can be loaded using
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{data}\hlstd{(OJ,} \hlkwc{package} \hlstd{=} \hlstr{"ISLR"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\noindent After loading the \cc{caret} and \cc{nclRpredictive} package 
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(}\hlstr{"caret"}\hlstd{)}
\hlkwd{library}\hlstd{(}\hlstr{"nclRpredictive"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\noindent make an initial examination of the relationships between each of the predictors and the response\sidenote{Use the \cc{plot} function with a model formula or the \cc{pairs} function.}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{par}\hlstd{(}\hlkwc{mfrow} \hlstd{=} \hlkwd{c}\hlstd{(}\hlnum{4}\hlstd{,} \hlnum{5}\hlstd{),} \hlkwc{mar}\hlstd{=} \hlkwd{c}\hlstd{(}\hlnum{4}\hlstd{,} \hlnum{.5}\hlstd{,} \hlnum{.5}\hlstd{,} \hlnum{.5}\hlstd{))}
\hlkwd{plot}\hlstd{(Purchase} \hlopt{~} \hlstd{.,} \hlkwc{data} \hlstd{= OJ)}
\end{alltt}
\end{kframe}
\end{knitrout}

\section*{Initial model building}

\begin{itemize}
\item To begin, create a logistic regression model that takes into consideration the prices of the two brands of orange juice, \cc{PriceCH} and \cc{PriceMM}.\sidenote{Hint: Use the \cc{train} function, with \cc{method = 'glm'}.  Look at the help page for the data set to understand what these
variables represent.}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{m1} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase} \hlopt{~} \hlstd{PriceCH} \hlopt{+} \hlstd{PriceMM,}
    \hlkwc{data} \hlstd{= OJ,} \hlkwc{method} \hlstd{=} \hlstr{"glm"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}
  \item What proportion of purchases does this model get right?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{mean}\hlstd{(}\hlkwd{predict}\hlstd{(m1)} \hlopt{!=} \hlstd{OJ}\hlopt{$}\hlstd{Purchase)}
\end{alltt}
\begin{verbatim}
## [1] 0.3776
\end{verbatim}
\end{kframe}
\end{knitrout}
  \item How does this compare to if we used no model?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# with no model we essentially predict according to }
\hlcom{# proportion of observations in data}
\hlstd{probs} \hlkwb{=} \hlkwd{table}\hlstd{(OJ}\hlopt{$}\hlstd{Purchase)}\hlopt{/}\hlkwd{nrow}\hlstd{(OJ)}
\hlstd{preds} \hlkwb{=} \hlkwd{sample}\hlstd{(}\hlkwd{levels}\hlstd{(OJ}\hlopt{$}\hlstd{Purchase),} \hlkwc{prob} \hlstd{= probs)}
\hlkwd{mean}\hlstd{(preds} \hlopt{!=} \hlstd{OJ}\hlopt{$}\hlstd{Purchase)}
\end{alltt}
\begin{verbatim}
## [1] 0.5009
\end{verbatim}
\end{kframe}
\end{knitrout}
\end{itemize}

\section*{Visualising the boundary}

The \cc{nclRpredictive} package contains following code produces a plot of the decision boundary as seen in figure~\ref{fig:purchaseboundary}.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{boundary_plot}\hlstd{(m1,OJ}\hlopt{$}\hlstd{PriceCH, OJ}\hlopt{$}\hlstd{PriceMM, OJ}\hlopt{$}\hlstd{Purchase,}
              \hlkwc{xlab}\hlstd{=}\hlstr{"Price CH"}\hlstd{,} \hlkwc{ylab}\hlstd{=}\hlstr{"Price MM"}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in localPlotWindow(xlim, ylim, ...): formal argument "{}xlab"{} matched by multiple actual arguments}}\end{kframe}
\end{knitrout}
\noindent Run the boundary code above, and make sure you get a similar plot.

\begin{marginfigure}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in localPlotWindow(xlim, ylim, ...): formal argument "{}xlab"{} matched by multiple actual arguments}}\end{kframe}
\includegraphics[width=\maxwidth]{figure/figure1-1} 

\end{knitrout}
  \caption{Examining the decision boundary for orange juice brand purchases by price.}
  \label{fig:purchaseboundary}
\end{marginfigure}

\begin{itemize}
  \item What happens if we add an interaction term? How does the boundary change?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# We now have a curved decision boundary.  There are two}
\hlcom{# regions of where we would predict MM, bottom left, and a}
\hlcom{# tiny one up in the top right.}
\end{alltt}
\end{kframe}
\end{knitrout}
\item Try adding polynomial terms.
\end{itemize}

\section*{Using all of the predictors}

\begin{itemize}
  \item Fit a logistic regression model using all of the predictors.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{mLM} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase} \hlopt{~} \hlstd{.,} \hlkwc{data} \hlstd{= OJ,} \hlkwc{method} \hlstd{=} \hlstr{"glm"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}
  \item Is there a problem?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{## YES!}
\end{alltt}
\end{kframe}
\end{knitrout}

\noindent We can view the most recent warning messages by using the \cc{warnings} function
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{warnings}\hlstd{()}
\end{alltt}
\end{kframe}
\end{knitrout}



\noindent This suggests some rank--deficient fit problems,

\item Look at the final model, you should notice that a number of parameters have not been estimated
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{m_log}\hlopt{$}\hlstd{finalModel}
\end{alltt}
\begin{verbatim}
## 
## Call:  NULL
## 
## Coefficients:
##    (Intercept)  WeekofPurchase         StoreID  
##         5.1581         -0.0118         -0.1709  
##        PriceCH         PriceMM          DiscCH  
##         4.5865         -3.6249         10.7967  
##         DiscMM       SpecialCH       SpecialMM  
##        26.4615          0.2672          0.3169  
##        LoyalCH     SalePriceMM     SalePriceCH  
##        -6.3023              NA              NA  
##      PriceDiff       Store7Yes       PctDiscMM  
##             NA          0.3113        -50.6976  
##      PctDiscCH   ListPriceDiff           STORE  
##       -27.3399              NA              NA  
## 
## Degrees of Freedom: 1069 Total (i.e. Null);  1057 Residual
## Null Deviance:	    1430 
## Residual Deviance: 817 	AIC: 843
\end{verbatim}
\end{kframe}
\end{knitrout}

\noindent The help page
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlopt{?}\hlstd{ISLR}\hlopt{::}\hlstd{OJ}
\end{alltt}
\end{kframe}
\end{knitrout}
\noindent gives further insight: the \cc{PriceDiff} variable is a linear combination of \cc{SalePriceMM} and \cc{SalePriceCH} so we should remove this. In addition the \cc{StoreID} and \cc{STORE} variable are different encodings of the same information so we should remove one of these too. We also have \cc{DiscCH} and \cc{DiscMM} which are the differences between \cc{PriceCH} and \cc{SalePriceCH} and \cc{PriceMM} and \cc{SalePriceMM} respectively and \cc{ListPriceDiff} is a linear combination of these prices. Removing all of these variables allows the model to be fit and all parameters to be estimated.\sidenote{This is to highlight that we need to understand what we have in our data.}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{OJsub} \hlkwb{=} \hlstd{OJ[,}\hlopt{!}\hlstd{(}\hlkwd{colnames}\hlstd{(OJ)} \hlopt{%in%} \hlkwd{c}\hlstd{(}\hlstr{"STORE"}\hlstd{,} \hlstr{"SalePriceCH"}\hlstd{,}
           \hlstr{"SalePriceMM"}\hlstd{,}\hlstr{"PriceDiff"}\hlstd{,} \hlstr{"ListPriceDiff"}\hlstd{))]}
\hlstd{OJsub}\hlopt{$}\hlstd{Store7} \hlkwb{=} \hlkwd{as.numeric}\hlstd{(OJsub}\hlopt{$}\hlstd{Store7)} \hlopt{-} \hlnum{1}
\hlstd{m_log} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase} \hlopt{~} \hlstd{.,} \hlkwc{data} \hlstd{= OJsub,} \hlkwc{method} \hlstd{=} \hlstr{"glm"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\noindent The problem of linear combinations of predictors can be shown with this simple theoretical example. Suppose we have a response $y$ and three predictors $x_1$, $x_2$ and the linear combination $x_3 = (x_1 + x_2)$. On fitting a linear model we try to find estimates of the parameters in the equation
\[
y = \beta_0 + \beta_1 x_1 + \beta_2 x_2 + \beta_3 (x_1 + x_2).
\]
\noindent However we could just as easily rewrite this as
\begin{align*}
y &= \beta_0 + \beta_1 x_1 + \beta_2 x_2 + \beta_3 (x_1 + x_2) \\
&= \beta_0 + (\beta_1 + \beta_3) x_1 + (\beta_2 + \beta_3) x_2 \\
&= \beta_0 + \beta_1^{\ast} x_1 + \beta_2^{\ast} x_2.
\end{align*}
This leads to a rank--deficient model matrix, essentially we can never find the value of the $\beta_3$ due to the fact we have the linear combination of predictors.

We could achieve the same using the \cc{caret} package function \cc{findLinearCombos}. The function takes a model matrix as an argument. We can create such a matrix using the 
\cc{model.matrix} function with our formula object
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{remove} \hlkwb{=} \hlkwd{findLinearCombos}\hlstd{(}
               \hlkwd{model.matrix}\hlstd{(Purchase} \hlopt{~} \hlstd{.,} \hlkwc{data} \hlstd{= OJ))}
\end{alltt}
\end{kframe}
\end{knitrout}
\noindent The output list has a component called \cc{remove} suggesting which variables should be removed to get rid of linear combinations
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{(badvar} \hlkwb{=} \hlkwd{colnames}\hlstd{(OJ)[remove}\hlopt{$}\hlstd{remove])}
\end{alltt}
\begin{verbatim}
## [1] "SalePriceMM"   "SalePriceCH"   "PriceDiff"    
## [4] "ListPriceDiff" "STORE"
\end{verbatim}
\begin{alltt}
\hlstd{OJsub} \hlkwb{=} \hlstd{OJ[,} \hlopt{-}\hlstd{remove}\hlopt{$}\hlstd{remove]}
\end{alltt}
\end{kframe}
\end{knitrout}
  \item How accurate is this new model using more predictors?]
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# the corrected model}
\hlstd{remove} \hlkwb{=} \hlkwd{findLinearCombos}\hlstd{(}\hlkwd{model.matrix}\hlstd{(Purchase}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= OJ))}
\hlstd{(badvar} \hlkwb{=} \hlkwd{colnames}\hlstd{(OJ)[remove}\hlopt{$}\hlstd{remove])}
\end{alltt}
\begin{verbatim}
## [1] "SalePriceMM"   "SalePriceCH"   "PriceDiff"    
## [4] "ListPriceDiff" "STORE"
\end{verbatim}
\begin{alltt}
\hlstd{OJsub} \hlkwb{=} \hlstd{OJ[,}\hlopt{-}\hlstd{(remove}\hlopt{$}\hlstd{remove)]}
\hlstd{mLM} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= OJsub,} \hlkwc{method} \hlstd{=} \hlstr{"glm"}\hlstd{)}
\hlkwd{mean}\hlstd{(}\hlkwd{predict}\hlstd{(mLM,OJsub)} \hlopt{==} \hlstd{OJsub}\hlopt{$}\hlstd{Purchase)}
\end{alltt}
\begin{verbatim}
## [1] 0.8355
\end{verbatim}
\end{kframe}
\end{knitrout}
  \item What are the values of sensitivity and specificity?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{## could use confusionMatrix}
\hlstd{(cmLM} \hlkwb{=} \hlkwd{confusionMatrix}\hlstd{(}\hlkwd{predict}\hlstd{(mLM,OJsub),OJsub}\hlopt{$}\hlstd{Purchase))}
\end{alltt}
\begin{verbatim}
## Confusion Matrix and Statistics
## 
##           Reference
## Prediction  CH  MM
##         CH 577 100
##         MM  76 317
##                                         
##                Accuracy : 0.836         
##                  95% CI : (0.812, 0.857)
##     No Information Rate : 0.61          
##     P-Value [Acc > NIR] : <2e-16        
##                                         
##                   Kappa : 0.651         
##  Mcnemar's Test P-Value : 0.083         
##                                         
##             Sensitivity : 0.884         
##             Specificity : 0.760         
##          Pos Pred Value : 0.852         
##          Neg Pred Value : 0.807         
##              Prevalence : 0.610         
##          Detection Rate : 0.539         
##    Detection Prevalence : 0.633         
##       Balanced Accuracy : 0.822         
##                                         
##        'Positive' Class : CH            
## 
\end{verbatim}
\begin{alltt}
\hlcom{# or }
\hlkwd{sensitivity}\hlstd{(}\hlkwd{predict}\hlstd{(mLM,OJsub),OJsub}\hlopt{$}\hlstd{Purchase)}
\end{alltt}
\begin{verbatim}
## [1] 0.8836
\end{verbatim}
\begin{alltt}
\hlkwd{specificity}\hlstd{(}\hlkwd{predict}\hlstd{(mLM,OJsub),OJsub}\hlopt{$}\hlstd{Purchase)}
\end{alltt}
\begin{verbatim}
## [1] 0.7602
\end{verbatim}
\end{kframe}
\end{knitrout}
  \item What does this mean?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# The model is fairly good at picking up both positive}
\hlcom{# events, person buys CH, and negative events, MM.}
\end{alltt}
\end{kframe}
\end{knitrout}

\end{itemize}

\section*{ROC curves}

\begin{marginfigure}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}
\includegraphics[width=\maxwidth]{figure/figure2-1} 

\end{knitrout}
  \caption{An example of a ROC curve for the logistic regression classifier. We can overlay ROC curves by adding the \cc{add = TRUE} argument.}
  \label{fig:roc}
\end{marginfigure}

If we were interested in the area under the ROC curve, we could retrain the model using the \cc{twoClassSummary} function as an argument to a train control object. Alternatively we can
use the \cc{pROC} package

\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(}\hlstr{"pROC"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\noindent This also allows us to view the ROC curve, via

\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{curve} \hlkwb{=} \hlkwd{roc}\hlstd{(}\hlkwc{response} \hlstd{= OJsub}\hlopt{$}\hlstd{Purchase,}
  \hlkwc{predictor} \hlstd{=} \hlkwd{predict}\hlstd{(m_log,} \hlkwc{type} \hlstd{=} \hlstr{"prob"}\hlstd{)[,}\hlstr{"CH"}\hlstd{])}
\hlcom{## this makes CH the event of interest}
\hlkwd{plot}\hlstd{(curve,} \hlkwc{legacy.axes} \hlstd{=} \hlnum{TRUE}\hlstd{)}
\hlkwd{auc}\hlstd{(curve)}
\end{alltt}
\end{kframe}
\end{knitrout}


\section*{Other classification models}

\begin{itemize}
  \item Try fitting models using the other classification algorithms we have seen so far. To begin with, just have two covariates and use the \cc{boundary\_plot} function to visualise
  the results\marginnote{We have seen LDA, QDA, KNN and logistic regression.}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{mKNN} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= OJsub,} \hlkwc{method} \hlstd{=} \hlstr{"knn"}\hlstd{)}
\hlstd{mLDA} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= OJsub,} \hlkwc{method} \hlstd{=} \hlstr{"lda"}\hlstd{)}
\hlstd{mQDA} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= OJsub,} \hlkwc{method} \hlstd{=} \hlstr{"qda"}\hlstd{)}
\hlstd{cmKNN} \hlkwb{=} \hlkwd{confusionMatrix}\hlstd{(}\hlkwd{predict}\hlstd{(mKNN,OJsub),OJsub}\hlopt{$}\hlstd{Purchase)}
\hlstd{cmLDA} \hlkwb{=} \hlkwd{confusionMatrix}\hlstd{(}\hlkwd{predict}\hlstd{(mLDA,OJsub),OJsub}\hlopt{$}\hlstd{Purchase)}
\hlstd{cmQDA} \hlkwb{=} \hlkwd{confusionMatrix}\hlstd{(}\hlkwd{predict}\hlstd{(mQDA,OJsub),OJsub}\hlopt{$}\hlstd{Purchase)}
\hlstd{(info} \hlkwb{=} \hlkwd{data.frame}\hlstd{(}\hlkwc{Model} \hlstd{=} \hlkwd{c}\hlstd{(}\hlstr{"logistic"}\hlstd{,}\hlstr{"knn"}\hlstd{,}\hlstr{"lda"}\hlstd{,}\hlstr{"qda"}\hlstd{),}
           \hlkwc{Accuracy} \hlstd{=} \hlkwd{c}\hlstd{(cmLM}\hlopt{$}\hlstd{overall[}\hlstr{"Accuracy"}\hlstd{],}
               \hlstd{cmKNN}\hlopt{$}\hlstd{overall[}\hlstr{"Accuracy"}\hlstd{],}
               \hlstd{cmLDA}\hlopt{$}\hlstd{overall[}\hlstr{"Accuracy"}\hlstd{],}
               \hlstd{cmQDA}\hlopt{$}\hlstd{overall[}\hlstr{"Accuracy"}\hlstd{]),}
           \hlkwc{Sensitivity} \hlstd{=} \hlkwd{c}\hlstd{(cmLM}\hlopt{$}\hlstd{byClass[}\hlstr{"Sensitivity"}\hlstd{],}
               \hlstd{cmKNN}\hlopt{$}\hlstd{byClass[}\hlstr{"Sensitivity"}\hlstd{],}
               \hlstd{cmLDA}\hlopt{$}\hlstd{byClass[}\hlstr{"Sensitivity"}\hlstd{],}
               \hlstd{cmQDA}\hlopt{$}\hlstd{byClass[}\hlstr{"Sensitivity"}\hlstd{]),}
           \hlkwc{Specificity} \hlstd{=} \hlkwd{c}\hlstd{(cmLM}\hlopt{$}\hlstd{byClass[}\hlstr{"Specificity"}\hlstd{],}
               \hlstd{cmKNN}\hlopt{$}\hlstd{byClass[}\hlstr{"Specificity"}\hlstd{],}
               \hlstd{cmLDA}\hlopt{$}\hlstd{byClass[}\hlstr{"Specificity"}\hlstd{],}
               \hlstd{cmQDA}\hlopt{$}\hlstd{byClass[}\hlstr{"Specificity"}\hlstd{])))}
\end{alltt}
\begin{verbatim}
##      Model Accuracy Sensitivity Specificity
## 1 logistic   0.8355      0.8836      0.7602
## 2      knn   0.8065      0.8943      0.6691
## 3      lda   0.8374      0.8790      0.7722
## 4      qda   0.8168      0.8407      0.7794
\end{verbatim}
\end{kframe}
\end{knitrout}
  \item How do they compare?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{#Logistic regression and LDA have highest accuracy, QDA is poorest at classifying events, KNN gives most false positives}
\end{alltt}
\end{kframe}
\end{knitrout}

  \item How does varying the number of nearest neighbours in a KNN affect the model fit?
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# Accuracy increases at first with knn before then getting}
\hlcom{# worse after a peak value of 9.}
\hlstd{(mKNN2} \hlkwb{=} \hlkwd{train}\hlstd{(Purchase} \hlopt{~} \hlstd{.,} \hlkwc{data} \hlstd{= OJsub,} \hlkwc{method} \hlstd{=} \hlstr{"knn"}\hlstd{,}
    \hlkwc{tuneGrid} \hlstd{=} \hlkwd{data.frame}\hlstd{(}\hlkwc{k} \hlstd{=} \hlnum{1}\hlopt{:}\hlnum{30}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## k-Nearest Neighbors 
## 
## 1070 samples
##   12 predictors
##    2 classes: 'CH', 'MM' 
## 
## No pre-processing
## Resampling: Bootstrapped (25 reps) 
## 
## Summary of sample sizes: 1070, 1070, 1070, 1070, 1070, 1070, ... 
## 
## Resampling results across tuning parameters:
## 
##   k   Accuracy  Kappa   Accuracy SD  Kappa SD
##    1  0.6899    0.3488  0.01841      0.03965 
##    2  0.6819    0.3330  0.02358      0.04886 
##    3  0.6875    0.3429  0.02288      0.04676 
##    4  0.6976    0.3623  0.02425      0.04919 
##    5  0.7035    0.3720  0.02367      0.04591 
##    6  0.7028    0.3706  0.02484      0.05051 
##    7  0.7092    0.3832  0.02230      0.04454 
##    8  0.7059    0.3753  0.02348      0.04835 
##    9  0.7027    0.3680  0.02346      0.04739 
##   10  0.7021    0.3642  0.02209      0.04608 
##   11  0.6995    0.3575  0.02507      0.05257 
##   12  0.6970    0.3529  0.02308      0.04998 
##   13  0.6929    0.3435  0.01895      0.03753 
##   14  0.6898    0.3366  0.01736      0.03794 
##   15  0.6899    0.3361  0.02210      0.04810 
##   16  0.6870    0.3293  0.02385      0.05150 
##   17  0.6845    0.3231  0.02298      0.05053 
##   18  0.6803    0.3144  0.02270      0.04846 
##   19  0.6794    0.3122  0.02381      0.04969 
##   20  0.6786    0.3086  0.02060      0.04550 
##   21  0.6753    0.3007  0.01956      0.04538 
##   22  0.6789    0.3082  0.02077      0.04708 
##   23  0.6781    0.3054  0.02263      0.05287 
##   24  0.6797    0.3087  0.02104      0.04802 
##   25  0.6774    0.3025  0.02113      0.04835 
##   26  0.6764    0.3000  0.02166      0.05089 
##   27  0.6738    0.2944  0.01970      0.04519 
##   28  0.6727    0.2919  0.02210      0.04973 
##   29  0.6706    0.2861  0.02284      0.05242 
##   30  0.6727    0.2904  0.02045      0.04555 
## 
## Accuracy was used to select the optimal model using 
##  the largest value.
## The final value used for the model was k = 7.
\end{verbatim}
\end{kframe}
\end{knitrout}
\end{itemize}

\noindent The KNN algorithm described in the notes can also be used for regression problems. In this case the predicted response is the mean of the $k$ nearest neighbours.
\begin{itemize}
  \item Try fitting the KNN model for the regression problem in practical 1. 
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(}\hlstr{"nclRpredictive"}\hlstd{)}
\hlkwd{data}\hlstd{(FuelEconomy,} \hlkwc{package} \hlstd{=} \hlstr{"AppliedPredictiveModeling"}\hlstd{)}
\hlstd{regKNN} \hlkwb{=} \hlkwd{train}\hlstd{(FE}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= cars2010,} \hlkwc{method} \hlstd{=} \hlstr{"knn"}\hlstd{)}
\hlstd{regLM} \hlkwb{=} \hlkwd{train}\hlstd{(FE}\hlopt{~}\hlstd{.,} \hlkwc{data} \hlstd{= cars2010,} \hlkwc{method} \hlstd{=} \hlstr{"lm"}\hlstd{)}
\hlstd{regKNN}\hlkwb{=} \hlkwd{validate}\hlstd{(regKNN)}
\hlstd{regLM} \hlkwb{=} \hlkwd{validate}\hlstd{(regLM)}
\hlkwd{mark}\hlstd{(regKNN)}
\hlkwd{mark}\hlstd{(regLM)}
\end{alltt}
\end{kframe}
\end{knitrout}

  \item How does this compare to the linear regression models?

\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# The KNN regression model is not as good as the linear}
\hlcom{# model at predicting the test set. It overestimates more}
\hlcom{# at the lower end.}
\end{alltt}
\end{kframe}
\end{knitrout}

\end{itemize}

\section*{An example with more than two classes}

The \cc{Glass} data set in the \cc{mlbench} package is a data frame containing examples of the chemical analysis of $7$ different types of glass. The goal is to be able to predict which category glass falls into based on the values of the $9$ predictors.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{data}\hlstd{(Glass,} \hlkwc{package} \hlstd{=} \hlstr{"mlbench"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\noindent A logistic regression model is typically not suitable for more than $2$ classes, so try fitting the other models using a training set that consists of 90\% of the available data.\marginnote{The function \cc{createDataPartition} can be used here, see notes for a reminder.}

\end{document}
